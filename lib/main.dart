import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:nosh_app/NavigationService.dart';
import 'package:nosh_app/components/firebase_alert.dart';
import 'package:nosh_app/config/palette.dart';
import 'package:nosh_app/screens/add_menu_item.dart';
import 'package:nosh_app/screens/canteen_list.dart';
import 'package:nosh_app/screens/cart.dart';
import 'package:nosh_app/screens/category_item.dart';
import 'package:nosh_app/screens/home.dart';
import 'package:nosh_app/screens/item_detail.dart';
import 'package:nosh_app/screens/menu_list.dart';
import 'package:nosh_app/screens/notification_list.dart';
import 'package:nosh_app/screens/order_list.dart';
import 'package:nosh_app/screens/order_status.dart';
import 'package:nosh_app/screens/order_summary.dart';
import 'package:nosh_app/screens/qr_scan.dart';
import 'package:nosh_app/screens/auth.dart';
import 'package:nosh_app/screens/splash.dart';
import 'package:nosh_app/screens/verify_otp.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:intl/intl.dart';
import 'package:month_year_picker/month_year_picker.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '/firebase_options.dart'; // this file is generated by "flutterfire config" command
import 'package:firebase_messaging/firebase_messaging.dart';

void main() async {
  // Initialization
  WidgetsFlutterBinding.ensureInitialized();

  final Future<SharedPreferences> _prefs = SharedPreferences.getInstance();
  final SharedPreferences prefs = await _prefs;

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  FirebaseMessaging messaging = FirebaseMessaging.instance;

  NotificationSettings settings = await messaging.requestPermission(
    alert: true,
    announcement: false,
    badge: true,
    carPlay: false,
    criticalAlert: false,
    provisional: false,
    sound: true,
  );

  print('User granted permission: ${settings.authorizationStatus}');

  String? fcmToken = await FirebaseMessaging.instance.getToken() as String;
  print('Firebase token fcmToken: ${fcmToken}');
  prefs.setString("fcmToken", fcmToken);

  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

// Listneing to the foreground messages
  FirebaseMessaging.onMessage.listen((RemoteMessage message) {
    print('Got a message whilst in the foreground!');
    print('Message data: ${message.data}');

    if (message.notification != null) {
      print('Message also contained a notification: ${message.notification}');
    }

    showAlertDialog(
        NavigationService.navigatorKey.currentContext as BuildContext, message);
  });

  runApp(MyApp());
}

// Lisitnening to the background messages
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  await Firebase.initializeApp();
  print("Handling a background message: ${message.messageId}");
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NOSH',
      navigatorKey: NavigationService.navigatorKey,
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Palette.kToDark,
        // primaryColor: Color.fromRGBO(94, 165, 152, 0),
      ),
      home: Splash(),
      localizationsDelegates: [
        GlobalWidgetsLocalizations.delegate,
        GlobalMaterialLocalizations.delegate,
        MonthYearPickerLocalizations.delegate,
      ],
    );
  }
}
